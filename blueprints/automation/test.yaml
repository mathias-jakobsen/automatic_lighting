blueprint:
  name: AL - Triggered Lighting
  description: |
    Uses the 'Automatic Lighting' integration to create a profile that will turn on lighting when a trigger is triggered.
  domain: automation
  input:
    group_id:
      name: Group
      description: The id of the group that this automation should belong to.
    triggers:
      name: Triggers
      description: The trigger(s) that will activate the lighting.
      selector:
        entity:
          domain: binary_sensor
    lights:
      name: Lights
      description: The lights that should be turned on.
      selector:
        target:
          entity:
            domain: light

    time_after:
      name: After
      description: The time after which the lights can be turned on.
      default: "00:00:00"
      selector:
        time:
    time_before:
      name: Before
      description: The time before which the lights can be turned on.
      default: "23:59:59"
      selector:
        time:
    illuminance_entity:
      name: Daylight Sensor
      description: The entity that measures the amount of daylight.
      default: ""
      selector:
        entity:
          domain: sensor
          device_class: illuminance
    illuminance_threshold:
      name: Daylight Threshold
      description: Defines the threshold of daylight below which the lights are turned on.
      default: 100
      selector:
        number:
          mode: box
          min: 1
          max: 100000
          unit_of_measurement: lx
    brightness:
      name: Brightness
      description: The brightness (in %) that the lights should be set to when turned on.
      default: 100
      selector:
        number:
          mode: slider
          min: 1
          max: 100
          step: 1
          unit_of_measurement: "%"
    color_temp:
      name: Color Temperature
      description: The color temperature (in kelvin) that the lights should be set to when turned on.
      default: 3000
      selector:
        number:
          mode: slider
          min: 2200
          max: 6500
          step: 25
          unit_of_measurement: K
    duration:
      name: Duration
      description: The duration (in seconds) that the lights are turned on.
      default: 60
      selector:
        number:
          mode: box
          min: 1
          max: 100000
          unit_of_measurement: s
    block_enabled:
      name: Enable Blocking.
      description: Enables the automatic blocking mode for this automation.
      default: true
      selector:
        boolean:
    block_timeout:
      name: Block Timeout
      description: Sets the time that the automation should be blocked.
      default: 120
      selector:
        number:
          mode: box
          min: 1
          max: 100000
          unit_of_measurement: s

max_exceeded: silent
mode: restart

variables:
  illuminance_entity: !input illuminance_entity
  illuminance_threshold: !input illuminance_threshold
  raw_triggers: !input triggers
  triggers: >-
    {{ (raw_triggers|replace(' ', '')).split(',') }}

trigger:
  - platform: event
    event_type: automation_reloaded
  - platform: event
    event_type: automatic_lighting_event
    event_data:
      group_id: !input group_id
  - platform: state
    entity_id: !input triggers
    to: "on"
action:
  - choose:
      - conditions:
          - "{{ trigger.platform == 'event' and trigger.event.event_type == 'automatic_lighting_event' and trigger.event.data.type == 'restart' }}"
        sequence:
          - service: automatic_lighting.register
            data:
              group_id: !input group_id
              lights: !input lights
      - conditions:
          - "{{ expand(triggers)|selectattr('state', 'eq', 'on')|list|count > 0 }}"
          - "{{ True if illuminance_entity == '' else states(illuminance_entity)|float <= illuminance_threshold|float }}"
          - condition: time
            after: !input time_after
            before: !input time_before
        sequence:
          - variables:
              id: >-
                {% set ns = namespace(unique_id=[]) %}
                {% for i in range(0, 10) %}
                  {% set ns.unique_id = ns.unique_id + [[0,1,2,3,4,5,6,7,8,9]|random] %}
                {% endfor %}
                {{ ns.unique_id|join("") }}
          - service: automatic_lighting.turn_on
            data:
              group_id: !input group_id
              automation_id: "{{ id }}"
              type: triggered
              lights: !input lights
              brightness_pct: !input brightness
              kelvin: !input color_temp
              enable_block: !input block_enabled
              block_timeout: !input block_timeout
          - wait_template: >-
              {{ expand(triggers)|selectattr('state', 'eq', 'off')|list|count == triggers|length }}
          - delay: !input duration
          - service: automatic_lighting.turn_off
            data:
              group_id: !input group_id
              automation_id: "{{ id }}"